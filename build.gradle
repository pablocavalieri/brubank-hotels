plugins {
    id 'java'
    id 'application'
    id 'com.gradle.build-scan' version '2.0.2'
    id 'org.springframework.boot' version '2.0.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation 'org.springframework.boot:spring-boot-dependencies:2.0.5.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'com.google.guava:guava:28.0-jre'
    implementation 'org.xerial:sqlite-jdbc:3.8.11.2'
    implementation 'com.zsoltfabok:sqlite-dialect:1.0'
    implementation 'javax.persistence:javax.persistence-api:2.2'
//    implementation 'javax.persistence:persistence-api:1.0.2'
    implementation 'org.springframework.data:spring-data-jpa'
    implementation 'org.hibernate:hibernate-core:5.0.1.Final'
    implementation 'org.hibernate:hibernate-entitymanager:5.0.1.Final'
    
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-all:1.10.19'
    
    components {
        withModule('org.springframework:spring-beans') {
            allVariants {
                withDependencyConstraints {
                    // Need to patch constraints because snakeyaml is an optional dependency
                    it.findAll {
                        it.name == 'snakeyaml'
                    }
                    .each {
                        it.version {
                            strictly '1.19'
                        }
                    }
                }
            }
        }
    }
}

buildScan {
    // always accept the terms of service
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'

    // always publish a build scan
    publishAlways()
}


application {
    mainClassName = 'com.brubank.hotels.deploy.App'
}
